name: release build

on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      sign: ${{ steps.check.outputs.sign }}
      version: ${{ steps.gradle-version.outputs.version }}
    steps:
      - id: check
        run: |
          if [ ! -z "${{ secrets.RELEASE_KEY_STORE }}" ]; then
            echo "sign=yes" >> $GITHUB_OUTPUT
          fi
      - id: gradle-version
        run: |
          echo "version=$(date -d "8 hour" -u +1.%y.%m%d%H)" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    if: ${{ needs.prepare.outputs.sign }}
    strategy:
      matrix:
        product: [ app ]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      product: ${{ matrix.product }}
      version: ${{ needs.prepare.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Release Apk Sign
        run: |
          echo releaseKeyAlias ='${{ secrets.RELEASE_KEY_ALIAS }}' >> gradle.properties
          echo releaseKeyPassword ='${{ secrets.RELEASE_KEY_PASSWORD }}' >> gradle.properties
          echo releaseStorePassword ='${{ secrets.RELEASE_STORE_PASSWORD }}' >> gradle.properties
          echo releaseStoreFile='./key.jks' >> gradle.properties
          echo ${{ secrets.RELEASE_KEY_STORE }} | base64 --decode > $GITHUB_WORKSPACE/app/key.jks


      - name: Unify Version Name
        run: |
          echo "统一版本号"
          sed "/def version/c def version = \"${{ env.version }}\"" $GITHUB_WORKSPACE/app/build.gradle  -i

      - name: Check gradle.properties
        run: |
          if grep -q "releaseStorePassword=" gradle.properties; then
            echo "releaseStorePassword exists"
          else
            echo "releaseStorePassword does not exist"
          fi

      - name: Upload App To Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tsv_pro
          path: gradle.properties
    
